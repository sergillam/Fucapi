#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Dec 22, 2017 02:19:10 PM
import sys

from tkinter import messagebox

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

class BINARIA:
    def __init__(self, top):
        self.top = Toplevel(top)
        self.top.focus()
        self.top.transient()
        self.top.grab_set()

        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=
        [('selected', _compcolor), ('active', _ana2color)])


        self.top.geometry("1080x720+180+10")
        self.top.title("Árvore Binária")
        self.top.configure(background="#d9d9d9")



        self.frPrincipal = Frame(self.top)
        self.frPrincipal.place(relx=0.00, rely=0.00, relheight=1 , relwidth=1)
        self.frPrincipal.configure(relief=GROOVE,background="#d9d9d9")

        self.lblInserir = Label(self.frPrincipal)
        self.lblInserir.place(relx=0.0, rely=0.02 )
        self.lblInserir.configure(text='''Inserir: ''' , background="#d9d9d9")

        self.txtInserir = Entry(self.frPrincipal)
        self.txtInserir.place(relx=0.055, rely=0.02, relheight=0.03, relwidth=0.05)
        self.txtInserir.bind('<Return>', lambda e: self.inserir())

        self.lblRemover = Label(self.frPrincipal)
        self.lblRemover.place(relx=0.00, rely=0.06 )
        self.lblRemover.configure(text='''Remover: ''' , background="#d9d9d9")

        self.txtRemover = Entry(self.frPrincipal)
        self.txtRemover.place(relx=0.055, rely=0.06, relheight=0.03, relwidth=0.05)
        self.txtRemover.bind('<Return>', lambda e: self.remover())

        self.lblPesquisar = Label(self.frPrincipal)
        self.lblPesquisar.place(relx=0.0, rely=0.097 )
        self.lblPesquisar.configure(text='''Pesquisar: ''' , background="#d9d9d9")

        self.txtPesquisar = Entry(self.frPrincipal)
        self.txtPesquisar.place(relx=0.055, rely=0.1, relheight=0.03, relwidth=0.05)
        self.txtPesquisar.bind('<Return>', lambda e: self.pesquisar())

    def inserir(self):
        messagebox.showinfo("Inserir", "Inserindo ...")

        self.lblPesquisar1 = Label(self.frPrincipal)
        self.lblPesquisar1.place(relx=0.5, rely=0.0 )
        self.lblPesquisar1.configure(text='''2''' , background="#d9d9d9")

        self.lblPesquisar2 = Label(self.frPrincipal)
        self.lblPesquisar2.place(relx=0.48, rely=0.02 )
        self.lblPesquisar2.configure(text='''1''' , background="#d9d9d9")

        self.lblPesquisar3 = Label(self.frPrincipal)
        self.lblPesquisar3.place(relx=0.52, rely=0.02 )
        self.lblPesquisar3.configure(text='''3''' , background="#d9d9d9")

    def remover(self):
        messagebox.showinfo("Remover", "Removendo ...")

    def pesquisar(self):
        messagebox.showinfo("Pesquisar", "Pesquisando ...")

if __name__ == '__main__':
    root = Tk()
    top = BINARIA(root)
    root.mainloop()



